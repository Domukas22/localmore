// //

import css from "./icons.module.css";
import PropTypes from "prop-types";

export function ICON_activeDigit({ count, IS_active, inverse = false, jump = false }) {
  return (
    <div
      className={css.ICON_activeDigit}
      data-active={IS_active || false}
      data-inverse={inverse}
      data-testid="active-digit-icon"
      data-jump={jump}
    >
      <p>{count || "0"}</p>
    </div>
  );
}
export function ICON_x({
  rotate = false,
  color = "dark",
  small = false,
  rotationAnimation = false,
  oneLine = false,
}) {
  return (
    <div
      className={small ? css.ICON_x_small : css.ICON_x}
      data-color={color}
      data-rotate={rotate}
      data-rotation-animation={rotationAnimation}
      data-one-line={oneLine}
    ></div>
  );
}
export function ICON_arrow({ direction = "right", color = "dark" }) {
  const rotationAngle = {
    right: "0deg",
    left: "180deg",
    down: "90deg",
    up: "-90deg",
  }[direction];

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="14"
      viewBox="0 0 18 12"
      fill="none"
      style={{ rotate: rotationAngle }}
      className={css.ICON_arrow}
    >
      <path
        d="M1 5.25C0.585786 5.25 0.25 5.58579 0.25 6C0.25 6.41421 0.585786 6.75 1 6.75L1 5.25ZM17.5303 6.53033C17.8232 6.23744 17.8232 5.76256 17.5303 5.46967L12.7574 0.696699C12.4645 0.403806 11.9896 0.403806 11.6967 0.696699C11.4038 0.989593 11.4038 1.46447 11.6967 1.75736L15.9393 6L11.6967 10.2426C11.4038 10.5355 11.4038 11.0104 11.6967 11.3033C11.9896 11.5962 12.4645 11.5962 12.7574 11.3033L17.5303 6.53033ZM1 6.75L17 6.75L17 5.25L1 5.25L1 6.75Z"
        className={css.path_FILL}
        data-color={color}
      />
    </svg>
  );
}
export function ICON_leavePage({ color = "dark" }) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10" className={css.ICON_leavePage}>
      <path
        d="M0.434315 8.43431C0.121895 8.74673 0.121895 9.25327 0.434315 9.56569C0.746734 9.8781 1.25327 9.8781 1.56569 9.56569L0.434315 8.43431ZM9.8 1C9.8 0.558172 9.44183 0.2 9 0.2L1.8 0.200001C1.35817 0.200001 1 0.558173 1 1C1 1.44183 1.35817 1.8 1.8 1.8H8.2V8.2C8.2 8.64183 8.55817 9 9 9C9.44183 9 9.8 8.64183 9.8 8.2L9.8 1ZM1.56569 9.56569L9.56569 1.56569L8.43431 0.434315L0.434315 8.43431L1.56569 9.56569Z"
        data-color={color}
      />
    </svg>
  );
}

export function ICON_save({ color = "dark" }) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="18"
      height="16"
      viewBox="0 0 18 16"
      fill="none"
      className={css.ICON_save}
      data-testid="icon-save"
    >
      <path
        d="M9.00013 15C9.78229 15 10.8832 14.1123 11.5544 13.5634C12.2256 13.0145 13.9986 11.5084 14.8111 10.586C15.6236 9.66357 16.8154 8.00547 16.9787 6.26592C17.142 4.52637 16.3515 2.63429 15.1411 1.7933C13.9307 0.952322 12.7047 0.873466 11.7856 1.12768C10.8196 1.39538 10.3318 1.61432 9.03826 3.07008C9.03334 3.07546 9.02745 3.07974 9.02094 3.08267C9.01443 3.08559 9.00744 3.08709 9.00037 3.08709C8.99331 3.08709 8.98631 3.08559 8.9798 3.08267C8.97329 3.07974 8.96741 3.07546 8.96248 3.07008C7.66898 1.61432 7.18111 1.39538 6.21514 1.12768C5.29609 0.873466 4.06956 0.952841 2.85965 1.7933C1.64974 2.63377 0.855356 4.52585 1.02205 6.26592C1.18875 8.00599 2.3752 9.66357 3.18963 10.586C4.00405 11.5084 5.77517 13.0151 6.44636 13.5634C7.11756 14.1118 8.21796 15 9.00013 15Z"
        stroke="black"
        strokeWidth="1.6"
        data-style={color}
      />
    </svg>
  );
}
export function ICON_dropDownArrow({ color = "dark" }) {
  return (
    <div className={css.ICON_dropDownArrow} data-color={color}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 7 6"
        fill="none"
        style={{
          width: "100%",
          height: "100%",
        }}
      >
        <path d="M4.36602 5.5C3.98112 6.16667 3.01888 6.16667 2.63397 5.5L0.46891 1.75C0.0840102 1.08333 0.565136 0.25 1.33494 0.25L5.66506 0.249999C6.43487 0.249999 6.91599 1.08333 6.53109 1.75L4.36602 5.5Z" />
      </svg>
    </div>
  );
}
export function ICON_search({ small = false }) {
  if (!small) {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
      >
        <path
          d="M13 13L19 19"
          stroke="#383940"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15Z"
          stroke="#383940"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  }

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
      <path
        d="M11.6739 11.6738L16.6739 16.6738"
        stroke="#383940"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M7.10869 12.8914C10.3023 12.8914 12.8913 10.3024 12.8913 7.10878C12.8913 3.91513 10.3023 1.32617 7.10869 1.32617C3.91504 1.32617 1.32608 3.91513 1.32608 7.10878C1.32608 10.3024 3.91504 12.8914 7.10869 12.8914Z"
        stroke="#383940"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}
export function ICON_menuLines() {
  return (
    <div className={css.ICON_menuLines}>
      <div className={css.line}></div>
      <div className={css.line}></div>
      <div className={css.line}></div>
    </div>
  );
}

export function ICON_proCon({ IS_pro = true }) {
  return (
    <div className={css.ICON_proCon} data-pro={IS_pro}>
      {IS_pro && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="10"
          height="12"
          viewBox="0 0 10 12"
          fill="none"
        >
          <path
            d="M1.3337 6.57719L3.85275 10.0198L8.93721 1.91042"
            stroke="white"
            strokeWidth="2.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      )}
      {!IS_pro && (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10" fill="none">
          <path
            d="M1.51611 1.36328L8.52006 8.36723"
            stroke="white"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M8.51953 1.36328L1.51558 8.36723"
            stroke="white"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      )}
    </div>
  );
}
export function ICON_3dots({ color = "dark" }) {
  return (
    <div className={css.ICON_3dots} data-color={color}>
      <div></div>
      <div></div>
      <div></div>
    </div>
  );
}
export function ICON_error({ color = "red" }) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 20 19"
      fill="none"
      className={css.ICON_error}
    >
      <path
        d="M10.8849 0.4905C10.5389 -0.1635 9.46294 -0.1635 9.11694 0.4905L0.116935 17.4905C0.0359187 17.6429 -0.00424573 17.8136 0.00035519 17.9861C0.00495611 18.1586 0.0541655 18.327 0.143189 18.4749C0.232212 18.6227 0.358012 18.7449 0.508333 18.8297C0.658653 18.9145 0.828366 18.9588 1.00094 18.9585H19.0009C19.1734 18.9589 19.343 18.9145 19.4932 18.8298C19.6434 18.7451 19.7691 18.6229 19.8581 18.4752C19.947 18.3274 19.9961 18.1591 20.0007 17.9867C20.0052 17.8144 19.965 17.6437 19.8839 17.4915L10.8849 0.4905ZM11.0009 15.9585H9.00094V13.9585H11.0009V15.9585ZM9.00094 11.9585V6.9585H11.0009L11.0019 11.9585H9.00094Z"
        className={css.path_FILL}
        data-color={color}
      />
    </svg>
  );
}
export function ICON_smiley({ emotion = "happy", color = "dark", small = false }) {
  switch (emotion) {
    case "happy":
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 164 163"
          fill="none"
          className={css.ICON_smiley}
          data-small={small}
        >
          <path
            d="M82 0C65.782 0 49.9281 4.77989 36.4433 13.7352C22.9584 22.6906 12.4483 35.4191 6.24191 50.3113C0.0355293 65.2035 -1.58834 81.5904 1.57564 97.3998C4.73963 113.209 12.5494 127.731 24.0173 139.129C35.4852 150.527 50.0962 158.289 66.0026 161.434C81.9091 164.579 98.3965 162.965 113.38 156.796C128.364 150.628 141.17 140.182 150.181 126.779C159.191 113.376 164 97.6192 164 81.5C163.977 59.8918 155.33 39.1753 139.957 23.896C124.584 8.61673 103.741 0.0228186 82 0ZM82 150.462C68.277 150.462 54.8622 146.417 43.452 138.839C32.0418 131.262 23.1486 120.491 17.897 107.89C12.6455 95.2893 11.2714 81.4235 13.9486 68.0463C16.6258 54.669 23.2341 42.3813 32.9377 32.7368C42.6413 23.0924 55.0045 16.5244 68.4638 13.8635C81.9231 11.2026 95.874 12.5683 108.552 17.7878C121.231 23.0074 132.067 31.8463 139.691 43.187C147.315 54.5277 151.385 67.8607 151.385 81.5C151.364 99.7833 144.047 117.312 131.039 130.24C118.032 143.169 100.396 150.441 82 150.462ZM44.1539 65.8269C44.1539 63.967 44.7088 62.1489 45.7484 60.6024C46.7881 59.056 48.2658 57.8506 49.9946 57.1389C51.7235 56.4271 53.6259 56.2409 55.4613 56.6038C57.2966 56.9666 58.9825 57.8622 60.3057 59.1774C61.6289 60.4925 62.5301 62.1681 62.8951 63.9923C63.2602 65.8165 63.0729 67.7073 62.3567 69.4256C61.6406 71.1439 60.4279 72.6126 58.872 73.6459C57.316 74.6792 55.4867 75.2308 53.6154 75.2308C51.1061 75.2308 48.6995 74.24 46.9251 72.4764C45.1507 70.7129 44.1539 68.321 44.1539 65.8269ZM119.846 65.8269C119.846 67.6868 119.291 69.5049 118.252 71.0514C117.212 72.5979 115.734 73.8032 114.005 74.5149C112.277 75.2267 110.374 75.4129 108.539 75.0501C106.703 74.6872 105.018 73.7916 103.694 72.4764C102.371 71.1613 101.47 69.4857 101.105 67.6615C100.74 65.8373 100.927 63.9465 101.643 62.2282C102.359 60.5099 103.572 59.0412 105.128 58.0079C106.684 56.9746 108.513 56.4231 110.385 56.4231C112.894 56.4231 115.301 57.4138 117.075 59.1774C118.849 60.9409 119.846 63.3329 119.846 65.8269ZM119.003 103.442C110.889 117.383 97.3987 125.385 82 125.385C66.6014 125.385 53.1187 117.391 45.0054 103.442C44.549 102.729 44.2426 101.931 44.1045 101.096C43.9664 100.262 43.9996 99.4087 44.202 98.5875C44.4044 97.7662 44.7718 96.9942 45.2822 96.3177C45.7926 95.6413 46.4354 95.0744 47.1719 94.6513C47.9084 94.2282 48.7235 93.9575 49.568 93.8555C50.4125 93.7536 51.269 93.8224 52.086 94.058C52.9031 94.2936 53.6637 94.691 54.3222 95.2263C54.9807 95.7617 55.5234 96.4239 55.9177 97.1731C61.8075 107.29 71.0641 112.846 82 112.846C92.936 112.846 102.193 107.282 108.074 97.1731C108.911 95.7327 110.289 94.6817 111.905 94.2511C113.521 93.8205 115.243 94.0456 116.692 94.877C118.141 95.7083 119.199 97.0778 119.632 98.6841C120.065 100.29 119.839 102.002 119.003 103.442Z"
            className={css.path_FILL}
            data-color={color}
          />
        </svg>
      );
    case "neutral":
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 164 163"
          fill="none"
          className={css.ICON_smiley}
          data-small={small}
        >
          <path
            d="M82 0C65.782 0 49.9281 4.77989 36.4433 13.7352C22.9584 22.6906 12.4483 35.4191 6.24191 50.3113C0.0355293 65.2035 -1.58834 81.5904 1.57564 97.3998C4.73963 113.209 12.5494 127.731 24.0173 139.129C35.4852 150.527 50.0962 158.289 66.0026 161.434C81.9091 164.579 98.3965 162.965 113.38 156.796C128.364 150.628 141.17 140.182 150.181 126.779C159.191 113.376 164 97.6192 164 81.5C163.977 59.8918 155.33 39.1753 139.957 23.896C124.584 8.61673 103.741 0.0228186 82 0ZM82 150.462C68.277 150.462 54.8622 146.417 43.452 138.839C32.0418 131.262 23.1486 120.491 17.897 107.89C12.6455 95.2893 11.2714 81.4235 13.9486 68.0463C16.6258 54.669 23.2341 42.3813 32.9377 32.7368C42.6413 23.0924 55.0045 16.5244 68.4638 13.8635C81.9231 11.2026 95.874 12.5683 108.552 17.7878C121.231 23.0074 132.067 31.8463 139.691 43.187C147.315 54.5277 151.385 67.8607 151.385 81.5C151.364 99.7833 144.047 117.312 131.039 130.24C118.032 143.169 100.396 150.441 82 150.462ZM119.846 106.577C119.846 108.24 119.182 109.834 117.999 111.01C116.816 112.186 115.211 112.846 113.538 112.846H50.4616C48.7887 112.846 47.1843 112.186 46.0014 111.01C44.8184 109.834 44.1539 108.24 44.1539 106.577C44.1539 104.914 44.8184 103.32 46.0014 102.144C47.1843 100.968 48.7887 100.308 50.4616 100.308H113.538C115.211 100.308 116.816 100.968 117.999 102.144C119.182 103.32 119.846 104.914 119.846 106.577ZM44.1539 65.8269C44.1539 63.967 44.7088 62.1489 45.7484 60.6024C46.7881 59.056 48.2658 57.8506 49.9946 57.1389C51.7235 56.4271 53.6259 56.2409 55.4613 56.6038C57.2966 56.9666 58.9825 57.8622 60.3057 59.1774C61.6289 60.4925 62.5301 62.1681 62.8951 63.9923C63.2602 65.8165 63.0729 67.7073 62.3567 69.4256C61.6406 71.1439 60.4279 72.6126 58.872 73.6459C57.316 74.6792 55.4867 75.2308 53.6154 75.2308C51.1061 75.2308 48.6995 74.24 46.9251 72.4764C45.1507 70.7129 44.1539 68.321 44.1539 65.8269ZM119.846 65.8269C119.846 67.6868 119.291 69.5049 118.252 71.0514C117.212 72.5979 115.734 73.8032 114.005 74.5149C112.277 75.2267 110.374 75.4129 108.539 75.0501C106.703 74.6872 105.018 73.7916 103.694 72.4764C102.371 71.1613 101.47 69.4857 101.105 67.6615C100.74 65.8373 100.927 63.9465 101.643 62.2282C102.359 60.5099 103.572 59.0412 105.128 58.0079C106.684 56.9746 108.513 56.4231 110.385 56.4231C112.894 56.4231 115.301 57.4138 117.075 59.1774C118.849 60.9409 119.846 63.3329 119.846 65.8269Z"
            className={css.path_FILL}
            data-color={color}
          />
        </svg>
      );
    case "sad":
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 164 163"
          fill="none"
          className={css.ICON_smiley}
          data-small={small}
        >
          <path
            d="M82 0C65.782 0 49.9281 4.77989 36.4433 13.7352C22.9584 22.6906 12.4483 35.4191 6.24191 50.3113C0.0355293 65.2035 -1.58834 81.5904 1.57564 97.3998C4.73963 113.209 12.5494 127.731 24.0173 139.129C35.4852 150.527 50.0962 158.289 66.0026 161.434C81.9091 164.579 98.3965 162.965 113.38 156.796C128.364 150.628 141.17 140.182 150.181 126.779C159.191 113.376 164 97.6192 164 81.5C163.977 59.8918 155.33 39.1753 139.957 23.896C124.584 8.61673 103.741 0.0228186 82 0ZM82 150.462C68.277 150.462 54.8622 146.417 43.452 138.839C32.0418 131.262 23.1486 120.491 17.897 107.89C12.6455 95.2893 11.2714 81.4235 13.9486 68.0463C16.6258 54.669 23.2341 42.3813 32.9377 32.7368C42.6413 23.0924 55.0045 16.5244 68.4638 13.8635C81.9231 11.2026 95.874 12.5683 108.552 17.7878C121.231 23.0074 132.067 31.8463 139.691 43.187C147.315 54.5277 151.385 67.8607 151.385 81.5C151.364 99.7833 144.047 117.312 131.039 130.24C118.032 143.169 100.396 150.441 82 150.462ZM44.1539 65.8269C44.1539 63.967 44.7088 62.1489 45.7484 60.6024C46.7881 59.056 48.2658 57.8506 49.9946 57.1389C51.7235 56.4271 53.6259 56.2409 55.4613 56.6038C57.2966 56.9666 58.9825 57.8622 60.3057 59.1774C61.6289 60.4925 62.5301 62.1681 62.8951 63.9923C63.2602 65.8165 63.0729 67.7073 62.3567 69.4256C61.6406 71.1439 60.4279 72.6126 58.872 73.6459C57.316 74.6792 55.4867 75.2308 53.6154 75.2308C51.1061 75.2308 48.6995 74.24 46.9251 72.4764C45.1507 70.7129 44.1539 68.321 44.1539 65.8269ZM119.846 65.8269C119.846 67.6868 119.291 69.5049 118.252 71.0514C117.212 72.5979 115.734 73.8032 114.005 74.5149C112.277 75.2267 110.374 75.4129 108.539 75.0501C106.703 74.6872 105.018 73.7916 103.694 72.4764C102.371 71.1613 101.47 69.4857 101.105 67.6615C100.74 65.8373 100.927 63.9465 101.643 62.2282C102.359 60.5099 103.572 59.0412 105.128 58.0079C106.684 56.9746 108.513 56.4231 110.385 56.4231C112.894 56.4231 115.301 57.4138 117.075 59.1774C118.849 60.9409 119.846 63.3329 119.846 65.8269ZM118.995 115.981C119.451 116.694 119.757 117.492 119.896 118.327C120.034 119.161 120 120.014 119.798 120.836C119.596 121.657 119.228 122.429 118.718 123.105C118.207 123.782 117.565 124.349 116.828 124.772C116.092 125.195 115.277 125.466 114.432 125.568C113.588 125.669 112.731 125.601 111.914 125.365C111.097 125.129 110.336 124.732 109.678 124.197C109.019 123.661 108.477 122.999 108.082 122.25C102.193 112.133 92.936 106.577 82 106.577C71.0641 106.577 61.8075 112.141 55.9177 122.25C55.5234 122.999 54.9807 123.661 54.3222 124.197C53.6637 124.732 52.9031 125.129 52.086 125.365C51.269 125.601 50.4125 125.669 49.568 125.568C48.7235 125.466 47.9084 125.195 47.1719 124.772C46.4354 124.349 45.7926 123.782 45.2822 123.105C44.7718 122.429 44.4044 121.657 44.202 120.836C43.9996 120.014 43.9664 119.161 44.1045 118.327C44.2426 117.492 44.549 116.694 45.0054 115.981C53.1187 102.04 66.6014 94.0384 82 94.0384C97.3987 94.0384 110.881 102.032 118.995 115.981Z"
            className={css.path_FILL}
            data-color={color}
          />
        </svg>
      );
    default:
      return "dd";
  }
}

ICON_activeDigit.propTypes = {
  count: PropTypes.number,
  IS_active: PropTypes.bool,
  inverse: PropTypes.bool,
  jump: PropTypes.bool,
};
ICON_x.propTypes = {
  rotate: PropTypes.bool,
  color: PropTypes.string,
  small: PropTypes.bool,
  rotationAnimation: PropTypes.bool,
  oneLine: PropTypes.bool,
};
ICON_arrow.propTypes = {
  direction: PropTypes.string,
  color: PropTypes.string,
};
ICON_save.propTypes = {
  style: PropTypes.string,
};
ICON_dropDownArrow.propTypes = {
  color: PropTypes.string,
};
ICON_search.propTypes = {
  color: PropTypes.string,
};
ICON_menuLines.propTypes = {};
ICON_proCon.propTypes = {
  IS_pro: PropTypes.bool,
};
ICON_3dots.propTypes = {
  color: PropTypes.string,
};
ICON_error.propTypes = {
  color: PropTypes.string,
};
