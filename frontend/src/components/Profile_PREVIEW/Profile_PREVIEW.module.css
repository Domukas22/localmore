/*  */

@import '@styles/global.css';
/* @import "~swiper/swiper-bundle.css"; */

.profile_PREVIEW {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  
  position: relative;
  overflow: hidden;

  border-radius: var(--radius-16);
  box-shadow: var(--shadow-small);
  background: white;

  & header {
    display: flex;
    padding: 0.8rem;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;

    & .btn_WRAP {
      margin-left: auto;
    }
  }

  
  & div[data-target="swiper"] {
    flex: 1;


    & img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  & footer {
    display: flex;
    flex-direction: column;
    color: var(--text-white);
    text-shadow: 0 0 0.4rem rgb(0 0 0 / 60%);
    position: relative;
    overflow: hidden;


    & .footer_IMG {
      position: absolute;
      top: -4rem;
      left: -4rem;
      width: calc(100% + 8rem);
      height: calc(100% + 8rem);
      filter: blur(2.5rem); 
  
    }


    & .top {
      padding: 0.8rem 1.4rem;
      justify-content: space-between;
      border-bottom: var(--border-white-15);
      align-items: center;

      & p {
        font-weight: 400;
      }

    }
    & .bottom {
      padding: 0.8rem;
    }

    & .top, .bottom {
      display: flex;
      gap: 0.6rem;
      position: relative; 
      z-index: 1;
    }

  }

  & .btn_WRAP {
    display: flex;
    gap: 0.6rem;
  }
}


@keyframes pop-to-side {
  0% {
    transform: translateX(0rem);
  }
  30% {
    transform: translateX(0.5rem);
  }
  100% {
    transform: translateX(0rem);
  }
}

.label {
  border-radius: 0.8rem;
  padding: 0.4rem 0.8rem;
  height: 3.2rem;
  font-weight: 700;
  color: white;
  text-shadow: 0.1rem 0.1rem 0.4rem rgba(0,0,0,1);
  box-shadow: var(--shadow-small);

  user-select: none;
  -webkit-user-drag: none;
  pointer-events: none;

}
.labelNew {
  composes: label;
  background: linear-gradient(
    rgba(255, 100, 100, 1) 0%, /* Red */
    rgba(255, 180, 0, 1) 10%, /* Orange */
    rgba(220, 230, 40, 1) 20%, /* Yellow */
    rgba(100, 200, 100, 1) 30%, /* Green */
    rgba(80, 180, 180, 1) 40%, /* Cyan */
    rgba(70, 160, 200, 1) 50%, /* Light Blue */
    rgba(60, 120, 200, 1) 60%, /* Blue */
    rgba(100, 50, 200, 1) 70%, /* Dark Blue */
    rgba(150, 30, 200, 1) 80%, /* Purple */
    rgba(220, 30, 180, 1) 90%, /* Magenta */
    rgba(255, 100, 100, 1) 100% /* Red */
  ) 0 0/200% 200%;  animation: move 3s linear infinite; /* Continuous moving animation */
}
@keyframes move {
  to {
    background-position: 200% 200%; /* Move the background diagonally to the opposite corner */
  }
}


.tag_PREVIEW {
  width: 100%;
  border-radius: 1.6rem 1.6rem 0rem 0rem;

  max-height: 35rem;
  display: flex;
  flex-direction: column;
  
  /* so there is no gap under the tag preview when it jumps up upon animation */
  bottom: -0.5rem;
  
  position: absolute;
  left: 0rem;
  width: 100%;
  z-index: 10;
  backdrop-filter: blur(2rem);
  background-color: rgba(0, 0, 0, 0.6);
  box-shadow: 0rem -0.1rem 2rem #000000bd;

  & button {
    backdrop-filter: none;
    background: rgba(0, 0, 0, 0);
    &:hover {background: rgba(255, 255, 255, 0.1) !important}
  }

  & .tagPreview_TOP {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.8rem 1rem 0.8rem 1.6rem;
    
    border-bottom: 0.1rem solid rgba(255, 255, 255, 0.10);
    color: rgba(255, 255, 255, 0.90);

  }
  & .tagPreview_BOTTOM {
    flex:1;
    display: flex;
    flex-wrap: wrap;
    gap: 0.8rem 0.6rem;
    padding: 1.2rem 0.8rem 1.7rem 0.8rem;  /* so there is no gap under the tag preview when it jumps up upon animation */
    align-content: flex-start;
    overflow-y: auto;

    scrollbar-width: auto;
    scrollbar-color: #828282 #333333;

    ::-webkit-scrollbar {width: 0.8rem;}
    ::-webkit-scrollbar-track {background: rgba(0, 0, 0, 0);}
    ::-webkit-scrollbar-thumb {
      background-color: #828282;
      border-radius: 1rem;
      border: 0rem solid #ffffff;
    }
  }
}
path {
  &[data-color="brand"] {fill: var(--brand)}
  /* white, brnt brand dark */
  &[data-color="dark"] {fill: var(--brand-black)}
  &[data-color="white"] {fill: white}
}

